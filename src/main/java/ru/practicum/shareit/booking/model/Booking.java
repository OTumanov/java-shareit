package ru.practicum.shareit.booking.model;

import lombok.*;
import ru.practicum.shareit.booking.utils.Status;
import ru.practicum.shareit.item.model.Item;
import ru.practicum.shareit.user.model.User;

import javax.persistence.*;
import java.time.LocalDateTime;


//CREATE TABLE IF NOT EXISTS bookings (
//        id BIGINT GENERATED BY DEFAULT AS IDENTITY NOT NULL,
//        start_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
//        end_time TIMESTAMP WITHOUT TIME ZONE NOT NULL,
//        item_id BIGINT REFERENCES items (id) NOT NULL,
//        booker_id BIGINT REFERENCES users (id) NOT NULL,
//        status VARCHAR(64) NOT NULL,
//        PRIMARY KEY (id)
//        );


@Entity
@Table(name = "bookings")
@Getter
@Setter
@NoArgsConstructor
@AllArgsConstructor
@Builder
public class Booking {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    @ManyToOne
    @JoinColumn(name = "item_id", nullable = false)
    private Item item;

    @ManyToOne
    @JoinColumn(name = "booker_id", nullable = false)
    private User booker;

    @Enumerated(EnumType.STRING)
    @Column(name = "status", nullable = false)
    private Status status;

    @Column(name = "start_time", nullable = false)
    private LocalDateTime start;

    @Column(name = "end_time", nullable = false)
    private LocalDateTime end;
}
